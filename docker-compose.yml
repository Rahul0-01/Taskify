services:
  db:
    image: mysql:8.0
    container_name: taskify-db
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    ports:
      - "${MYSQL_PORT}:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - taskify-network

  redis:
    image: redis:6-alpine
    container_name: taskify-redis
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - taskify-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: taskify-rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBIT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBIT_PASSWORD}
    ports:
      - "${RABBITMQ_PORT}:5672"
      - "${RABBITMQ_MGMT_PORT}:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - taskify-network

  backend:
    build: .
    container_name: taskify-backend
    ports:
      - "${BACKEND_PORT}:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://taskify-db:3306/${MYSQL_DATABASE}?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      - SPRING_DATASOURCE_USERNAME=${MYSQL_USER}
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_PASSWORD}
      - SPRING_DATA_REDIS_HOST=taskify-redis
      - SPRING_DATA_REDIS_PORT=6379
      - SPRING_RABBITMQ_HOST=taskify-rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - JWT_SECRET=${JWT_SECRET}
      - SPRING_MAIL_USERNAME=${SPRING_MAIL_USERNAME}
      - SPRING_MAIL_PASSWORD=${SPRING_MAIL_PASSWORD}
      - ELEVEN_API_KEY=${ELEVEN_API_KEY}
      - ELEVEN_VOICE_ID=${ELEVEN_VOICE_ID}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - taskify-network

  frontend:
    build:
      context: ./taskify-frontend
    container_name: taskify-frontend
    ports:
      - "${FRONTEND_PORT}:80"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - taskify-network

volumes:
  db_data:
  redis_data:
  rabbitmq_data:

networks:
  taskify-network:
    driver: bridge
